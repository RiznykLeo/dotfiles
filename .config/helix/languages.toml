[language-server]
emmet-lsp = {command = "emmet-langugage-server", args = ["--stdio"]}
cspell = {command = "cspell-lsp", args = ["--stdio"]}

[language-server.biome]
args = ["lsp-proxy", "--config-path", "./biome.jsonc"]
command = "biome"
required-root-patterns = ["biome.json", "biome.jsonc"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]
required-root-patterns = [".eslintrc", ".eslintrc.js", ".eslintrc.json", ".eslintrc.yml", ".eslintrc.yaml"]

[language-server.prettier]
command = "prettier"
args = ["--parser", "typescript"]
required-root-patterns = [".prettierrc", ".prettierrc.js", ".prettierrc.json", ".prettierrc.yml", ".prettierrc.yaml", "prettier.config.js"]

[language-server.tailwindcss]
command = "tailwindcss-language-server"
args = ["--stdio"]

# JavaScript with Biome
[[language]]
name = "javascript"
roots = ["biome.json", "biome.jsonc"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "biome", only-features = ["format", "diagnostics"] },
  "cspell"
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.js"] }

# JavaScript with ESLint/Prettier
[[language]]
name = "javascript"
roots = [".eslintrc", ".eslintrc.js", ".eslintrc.json", ".eslintrc.yml", ".eslintrc.yaml", ".prettierrc", ".prettierrc.js", ".prettierrc.json", ".prettierrc.yml", ".prettierrc.yaml", "prettier.config.js"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "eslint", only-features = ["diagnostics"] },
  { name = "prettier", only-features = ["format"] },
  "cspell"
]
formatter = { command = "prettier", args = ["--stdin-filepath", "file.js"] }

# TypeScript with Biome
[[language]]
name = "typescript"
roots = ["biome.json", "biome.jsonc"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "biome", only-features = ["format", "diagnostics"] },
  "cspell"
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.ts"] }

# TypeScript with ESLint/Prettier
[[language]]
name = "typescript"
roots = [".eslintrc", ".eslintrc.js", ".eslintrc.json", ".eslintrc.yml", ".eslintrc.yaml", ".prettierrc", ".prettierrc.js", ".prettierrc.json", ".prettierrc.yml", ".prettierrc.yaml", "prettier.config.js"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "eslint", only-features = ["diagnostics"] },
  { name = "prettier", only-features = ["format"] },
  "cspell"
]
formatter = { command = "prettier", args = ["--stdin-filepath", "file.ts"] }

# TSX with Biome
[[language]]
name = "tsx"
roots = ["biome.json", "biome.jsonc"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "tailwindcss" },
  { name = "biome", only-features = ["format", "diagnostics"] },
  "cspell"
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "a.tsx"] }

# TSX with ESLint/Prettier
[[language]]
name = "tsx"
roots = [".eslintrc", ".eslintrc.js", ".eslintrc.json", ".eslintrc.yml", ".eslintrc.yaml", ".prettierrc", ".prettierrc.js", ".prettierrc.json", ".prettierrc.yml", ".prettierrc.yaml", "prettier.config.js"]
auto-format = true
language-servers = [
  { name = "typescript-language-server", except-features = ["format"] },
  { name = "tailwindcss" },
  { name = "eslint", only-features = ["diagnostics"] },
  { name = "prettier", only-features = ["format"] },
  "cspell"
]
formatter = { command = "prettier", args = ["--stdin-filepath", "file.tsx"] }

# JSON with Biome
[[language]]
name = "json"
roots = ["biome.json", "biome.jsonc"]
language-servers = [
  { name = "vscode-json-language-server", except-features = ["format"] },
  { name = "biome", only-features = ["format", "diagnostics"] },
  "cspell"
]
formatter = { command = "biome", args = ["format", "--stdin-file-path", "file.json"] }

# JSON with Prettier
[[language]]
name = "json"
roots = [".prettierrc", ".prettierrc.js", ".prettierrc.json", ".prettierrc.yml", ".prettierrc.yaml", "prettier.config.js"]
language-servers = [
  { name = "vscode-json-language-server", except-features = ["format"] },
  { name = "prettier", only-features = ["format"] },
  "cspell"
]
formatter = { command = "prettier", args = ["--stdin-filepath", "file.json"] }

# # Default JSON
# [[language]]
# name = "json"
# roots = ["package.json", "tsconfig.json"]
# language-servers = [
#   { name = "vscode-json-language-server", except-features = ["format"] },
#   "cspell"
# ]
# formatter = { command = "biome", args = ["format", "--stdin-file-path", "file.json"] }

[[language]]
name = "markdown"
language-servers = ["cspell"]
